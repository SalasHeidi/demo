package com.evc1.diazmont.demo;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


@Controller
@RequestMapping("/mascota")
public class MainController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MascotaRepository mascotaRepository;

    @Autowired
    private JdbcTemplate jdbcTemplate;

@PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String nombre
      , @RequestParam String raza, @RequestParam String propietario )  {
        Mascota m = new Mascota();
        m.setNombre(nombre);
        m.setRaza(raza);
        m.setPropietario(propietario);
        mascotaRepository.save(m);
        return "Mascota a√±adida";

   
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Mascota> getAllUsers() {
    // This returns a JSON or XML with the users
    return mascotaRepository.findAll();
  }

  @PutMapping(path="/edit")
  public @ResponseBody String editUser(@RequestParam String nombre, @RequestParam String raza, @RequestParam Integer id, @RequestParam String propietario) {
    Mascota m = new Mascota();
    m.setNombre(nombre);
    m.setRaza(raza);
    m.setId(id);
    m.setPropietario(propietario);
    mascotaRepository.save(m);
    return "Mascota editada";
   
  }
    
  @GetMapping(path="/ver/{id}")
  public @ResponseBody Mascota getUser(@PathVariable Integer id) {
    return mascotaRepository.findById(id).get();
  }

  @DeleteMapping(path="/del")
  public @ResponseBody String editUser(@RequestParam Integer id) {
    Mascota m = new Mascota();
    m.setId(id);
    mascotaRepository.delete(m);
    return "La mascota ha sido eliminada";
  }

  @GetMapping(path="/get/report")
  public @ResponseBody List<Map<String, Object>> getReport(){
    String sql = "SELECT CONCAT(nombre, '(nombre) ==> (propietario)', propietario) as MIS_USUARIOS FROM mascota;";
    List<Map<String, Object>> users = jdbcTemplate.queryForList(sql);
    return users;
  }


    
    
}
